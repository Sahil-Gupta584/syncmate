/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as path from "node:path";
import * as process from "node:process";
import { fileURLToPath } from "node:url";
const __dirname = path.dirname(fileURLToPath(import.meta.url));

import * as runtime from "@prisma/client/runtime/library";
import * as $Enums from "./enums.js";
import * as $Class from "./internal/class.js";
import * as Prisma from "./internal/prismaNamespace.js";

export * as $Enums from "./enums.js";
export { Prisma };
/**
 * ## Prisma Client
 *
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname);
export type PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  Log = $Class.LogOptions<ClientOptions>,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>;

// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node");
path.join(process.cwd(), "generated/client/query_engine-windows.dll.node");

// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node");
path.join(
  process.cwd(),
  "generated/client/libquery_engine-debian-openssl-3.0.x.so.node",
);

/**
 * Model User
 *
 */
export type User = Prisma.UserModel;
/**
 * Model CreatorEditor
 *
 */
export type CreatorEditor = Prisma.CreatorEditorModel;
/**
 * Model Video
 *
 */
export type Video = Prisma.VideoModel;
/**
 * Model Channel
 *
 */
export type Channel = Prisma.ChannelModel;
/**
 * Model VideoEditor
 *
 */
export type VideoEditor = Prisma.VideoEditorModel;
/**
 * Model Invite
 *
 */
export type Invite = Prisma.InviteModel;
/**
 * Model Session
 *
 */
export type Session = Prisma.SessionModel;
/**
 * Model Account
 *
 */
export type Account = Prisma.AccountModel;
/**
 * Model Verification
 *
 */
export type Verification = Prisma.VerificationModel;
/**
 * Model Subscription
 *
 */
export type Subscription = Prisma.SubscriptionModel;

export type Role = $Enums.Role;
export const Role = $Enums.Role;

export type PlanType = $Enums.PlanType;
export const PlanType = $Enums.PlanType;

export type VideoStatus = $Enums.VideoStatus;
export const VideoStatus = $Enums.VideoStatus;

export type PrivacyStatus = $Enums.PrivacyStatus;
export const PrivacyStatus = $Enums.PrivacyStatus;

export type InviteStatus = $Enums.InviteStatus;
export const InviteStatus = $Enums.InviteStatus;

export type subscriptionStatus = $Enums.subscriptionStatus;
export const subscriptionStatus = $Enums.subscriptionStatus;
