name: Build & Push Creator

on:
  push:
    branches: [main]
    paths:
      - "apps/creator/**"
      - "packages/**"
      - "package.json"
      - "turbo.json"

jobs:
  build:
    name: Build Creator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.creator
          push: true
          tags: ${{ secrets.creator_repo }}
          build-args: |
            VITE_CREATOR_BASE_URL=${{ secrets.VITE_CREATOR_BASE_URL }}
            VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
            VITE_RAZORPAY_KEY_ID=${{ secrets.VITE_RAZORPAY_KEY_ID }}
            VITE_WEB_BASE_URL=${{ secrets.VITE_WEB_BASE_URL }}

      - name: Force new ecs service
        run: aws ecs update-service --cluster syncmate --service syncmate-creator-service --force-new-deployment

      - name: Wait for public IP of syncmate-creator
        id: get-ip
        run: |
          chmod +x .github/workflows/get-ecs-task-public-ip.sh
          ./.github/workflows/get-ecs-task-public-ip.sh syncmate-creator-service

      - name: Update Creator Cloudflare DNS Record
        run: |
          set -e
          IP="${{ steps.get-ip.outputs.ip }}"
          echo "Updating Cloudflare DNS for ${{ secrets.CF_RECORD_NAME }} to "'$IP'""

          curl -X PUT "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records/${{ secrets.CLOUDFLARE_CREATOR_RECORD_ID }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "Content-Type: application/json" \
            --data '{
              "type": "A",
              "name": "api",
              "content": "'"$IP"'",
              "ttl": 1,
              "proxied": true
            }'
